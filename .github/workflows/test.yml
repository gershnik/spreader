name: Build

on: 
  push:
    branches: 
      - '*'
      - '*/**'
    paths-ignore:
      - 'README.md'
      - '.gitignore'
      - 'LICENSE'
      - 'CHANGELOG.md'
      - 'Acknowledgments.md'
      - '.github/workflows/release.yml'

jobs:
  native:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: macos-latest
        - os: ubuntu-latest
          cc: gcc-11
          cxx: g++-11
        - os: ubuntu-latest
          cc: gcc-12
          cxx: g++-12
        - os: ubuntu-latest
          cc: gcc-13
          cxx: g++-13
        - os: ubuntu-latest
          cc: clang-13
          cxx: clang++-13
        - os: ubuntu-latest
          cc: clang-14
          cxx: clang++-14
        - os: windows-latest
        - os: windows-latest
          cmake-arch: Win32
        - os: windows-latest
          cmake-arch: ARM64

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: System Setup
        shell: bash
        run: |
          if [[ '${{ matrix.os }}' == 'ubuntu-latest' ]]; then
            if [[ '${{ matrix.cc }}' == 'clang-13' ]]; then
              sudo apt-get update
              sudo apt-get install -y libc++-13-dev libc++abi-13-dev
              echo "CXXFLAGS=-stdlib=libc++" >> $GITHUB_ENV
            fi

            if [[ '${{ matrix.cc }}' == 'gcc-12' ]]; then
              sudo apt-get update
              sudo apt-get install -y gcc-12 g++-12
            fi

            if [[ '${{ matrix.cc }}' == 'gcc-13' ]]; then
              sudo apt-get update
              sudo apt-get install -y gcc-13 g++-13
            fi
          fi

      - name: Configure
        shell: bash
        run: |
          if [[ '${{ matrix.cc }}' != '' ]]; then
            export CC=${{ matrix.cc }}
          fi
          if [[ '${{ matrix.cxx }}' != '' ]]; then
            export CXX=${{ matrix.cxx }}
          fi
          if [[ '${{ matrix.cmake-arch }}' != '' ]]; then
            export CMAKE_ARCH="-A ${{ matrix.cmake-arch }}"
          fi
          cmake -S . -B out -DCMAKE_BUILD_TYPE=Debug 

      - name: Build and Test
        run: |
          cmake --build out --target run-library-test --config Debug
  
  emscripten:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup EMSDK
        uses: mymindstorm/setup-emsdk@v11
        with:
          version: 3.1.26
          actions-cache-folder: 'emsdk-cache'

      - name: Build and Test
        run: |
          cmake -S . -B out -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=$EMSDK/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake
          cmake --build out --target test --config Debug

      
          